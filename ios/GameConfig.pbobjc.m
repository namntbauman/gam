// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameConfig.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "GameConfig.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - GameConfigRoot

@implementation GameConfigRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - GameConfigRoot_FileDescriptor

static GPBFileDescriptor *GameConfigRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"fanxi"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - GameConfig

@implementation GameConfig

@dynamic xuBetMoneys;
@dynamic goldBetMoneys;
@dynamic xuEnableBetMoneys;
@dynamic goldEnableBetMoneys;
@dynamic isEnable;
@dynamic zoneId;
@dynamic startAutoTime;
@dynamic endAutoTime;

typedef struct GameConfig__storage_ {
  uint32_t _has_storage_[1];
  int32_t zoneId;
  int32_t startAutoTime;
  int32_t endAutoTime;
  NSString *xuBetMoneys;
  NSString *goldBetMoneys;
  NSString *xuEnableBetMoneys;
  NSString *goldEnableBetMoneys;
} GameConfig__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "xuBetMoneys",
        .dataTypeSpecific.className = NULL,
        .number = GameConfig_FieldNumber_XuBetMoneys,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GameConfig__storage_, xuBetMoneys),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "goldBetMoneys",
        .dataTypeSpecific.className = NULL,
        .number = GameConfig_FieldNumber_GoldBetMoneys,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GameConfig__storage_, goldBetMoneys),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "xuEnableBetMoneys",
        .dataTypeSpecific.className = NULL,
        .number = GameConfig_FieldNumber_XuEnableBetMoneys,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GameConfig__storage_, xuEnableBetMoneys),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "goldEnableBetMoneys",
        .dataTypeSpecific.className = NULL,
        .number = GameConfig_FieldNumber_GoldEnableBetMoneys,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GameConfig__storage_, goldEnableBetMoneys),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isEnable",
        .dataTypeSpecific.className = NULL,
        .number = GameConfig_FieldNumber_IsEnable,
        .hasIndex = 4,
        .offset = 5,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "zoneId",
        .dataTypeSpecific.className = NULL,
        .number = GameConfig_FieldNumber_ZoneId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(GameConfig__storage_, zoneId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "startAutoTime",
        .dataTypeSpecific.className = NULL,
        .number = GameConfig_FieldNumber_StartAutoTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(GameConfig__storage_, startAutoTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "endAutoTime",
        .dataTypeSpecific.className = NULL,
        .number = GameConfig_FieldNumber_EndAutoTime,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(GameConfig__storage_, endAutoTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GameConfig class]
                                     rootClass:[GameConfigRoot class]
                                          file:GameConfigRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GameConfig__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\010\001\013\000\002\r\000\003\021\000\004\023\000\005\010\000\006\006\000\007\r\000\010\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

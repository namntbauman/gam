// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TurnRequest.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "TurnRequest.pbobjc.h"
 #import "BaseRequest.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - TurnRequestRoot

@implementation TurnRequestRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - TurnRequestRoot_FileDescriptor

static GPBFileDescriptor *TurnRequestRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"fanxi"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - TurnRequest

@implementation TurnRequest

@dynamic hasBaseReq, baseReq;
@dynamic zoneId;
@dynamic levelId;
@dynamic tableIndex;
@dynamic matchId;
@dynamic phomCard;
@dynamic tienlenCards;
@dynamic isGiveup;

typedef struct TurnRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t zoneId;
  int32_t levelId;
  int32_t tableIndex;
  int32_t phomCard;
  BaseRequest *baseReq;
  NSString *matchId;
  NSString *tienlenCards;
} TurnRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseReq",
        .dataTypeSpecific.className = GPBStringifySymbol(BaseRequest),
        .number = TurnRequest_FieldNumber_BaseReq,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(TurnRequest__storage_, baseReq),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "zoneId",
        .dataTypeSpecific.className = NULL,
        .number = TurnRequest_FieldNumber_ZoneId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(TurnRequest__storage_, zoneId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "levelId",
        .dataTypeSpecific.className = NULL,
        .number = TurnRequest_FieldNumber_LevelId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(TurnRequest__storage_, levelId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "tableIndex",
        .dataTypeSpecific.className = NULL,
        .number = TurnRequest_FieldNumber_TableIndex,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(TurnRequest__storage_, tableIndex),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "matchId",
        .dataTypeSpecific.className = NULL,
        .number = TurnRequest_FieldNumber_MatchId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(TurnRequest__storage_, matchId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "phomCard",
        .dataTypeSpecific.className = NULL,
        .number = TurnRequest_FieldNumber_PhomCard,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(TurnRequest__storage_, phomCard),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "tienlenCards",
        .dataTypeSpecific.className = NULL,
        .number = TurnRequest_FieldNumber_TienlenCards,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(TurnRequest__storage_, tienlenCards),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isGiveup",
        .dataTypeSpecific.className = NULL,
        .number = TurnRequest_FieldNumber_IsGiveup,
        .hasIndex = 7,
        .offset = 8,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[TurnRequest class]
                                     rootClass:[TurnRequestRoot class]
                                          file:TurnRequestRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(TurnRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\010\001\007\000\010\006\000\t\007\000\n\n\000\013\007\000\014\010\000\r\014\000\016\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

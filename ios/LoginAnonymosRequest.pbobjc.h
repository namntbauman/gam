// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LoginAnonymosRequest.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - LoginAnonymosRequestRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface LoginAnonymosRequestRoot : GPBRootObject
@end

#pragma mark - LoginAnonymousRequest

typedef GPB_ENUM(LoginAnonymousRequest_FieldNumber) {
  LoginAnonymousRequest_FieldNumber_Version = 1,
  LoginAnonymousRequest_FieldNumber_DeviceType = 2,
  LoginAnonymousRequest_FieldNumber_Imei = 3,
  LoginAnonymousRequest_FieldNumber_IsRoot = 4,
  LoginAnonymousRequest_FieldNumber_RequestTime = 5,
  LoginAnonymousRequest_FieldNumber_Nonce = 6,
  LoginAnonymousRequest_FieldNumber_DeviceModel = 7,
  LoginAnonymousRequest_FieldNumber_ScreenSize = 8,
  LoginAnonymousRequest_FieldNumber_SdkVersion = 9,
  LoginAnonymousRequest_FieldNumber_Mid = 10,
};

@interface LoginAnonymousRequest : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *version;
/** Test to see if @c version has been set. */
@property(nonatomic, readwrite) BOOL hasVersion;

@property(nonatomic, readwrite) int32_t deviceType;

@property(nonatomic, readwrite) BOOL hasDeviceType;
@property(nonatomic, readwrite, copy, null_resettable) NSString *imei;
/** Test to see if @c imei has been set. */
@property(nonatomic, readwrite) BOOL hasImei;

@property(nonatomic, readwrite) BOOL isRoot;

@property(nonatomic, readwrite) BOOL hasIsRoot;
@property(nonatomic, readwrite) int32_t requestTime;

@property(nonatomic, readwrite) BOOL hasRequestTime;
@property(nonatomic, readwrite, copy, null_resettable) NSString *nonce;
/** Test to see if @c nonce has been set. */
@property(nonatomic, readwrite) BOOL hasNonce;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceModel;
/** Test to see if @c deviceModel has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceModel;

@property(nonatomic, readwrite, copy, null_resettable) NSString *screenSize;
/** Test to see if @c screenSize has been set. */
@property(nonatomic, readwrite) BOOL hasScreenSize;

@property(nonatomic, readwrite, copy, null_resettable) NSString *sdkVersion;
/** Test to see if @c sdkVersion has been set. */
@property(nonatomic, readwrite) BOOL hasSdkVersion;

@property(nonatomic, readwrite) int32_t mid;

@property(nonatomic, readwrite) BOOL hasMid;
@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

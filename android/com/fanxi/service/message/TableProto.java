// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Table.proto

package com.fanxi.service.message;

public final class TableProto {
  private TableProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TableOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fanxi.Table)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 index = 1;</code>
     */
    int getIndex();

    /**
     * <code>int32 size = 2;</code>
     */
    int getSize();

    /**
     * <code>int32 cashBet = 3;</code>
     */
    int getCashBet();

    /**
     * <code>int32 maxPlayer = 4;</code>
     */
    int getMaxPlayer();

    /**
     * <code>bool isPlaying = 5;</code>
     */
    boolean getIsPlaying();
  }
  /**
   * Protobuf type {@code fanxi.Table}
   */
  public  static final class Table extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:fanxi.Table)
      TableOrBuilder {
    // Use Table.newBuilder() to construct.
    private Table(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Table() {
      index_ = 0;
      size_ = 0;
      cashBet_ = 0;
      maxPlayer_ = 0;
      isPlaying_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Table(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              index_ = input.readInt32();
              break;
            }
            case 16: {

              size_ = input.readInt32();
              break;
            }
            case 24: {

              cashBet_ = input.readInt32();
              break;
            }
            case 32: {

              maxPlayer_ = input.readInt32();
              break;
            }
            case 40: {

              isPlaying_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fanxi.service.message.TableProto.internal_static_fanxi_Table_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fanxi.service.message.TableProto.internal_static_fanxi_Table_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.fanxi.service.message.TableProto.Table.class, com.fanxi.service.message.TableProto.Table.Builder.class);
    }

    public static final int INDEX_FIELD_NUMBER = 1;
    private int index_;
    /**
     * <code>int32 index = 1;</code>
     */
    public int getIndex() {
      return index_;
    }

    public static final int SIZE_FIELD_NUMBER = 2;
    private int size_;
    /**
     * <code>int32 size = 2;</code>
     */
    public int getSize() {
      return size_;
    }

    public static final int CASHBET_FIELD_NUMBER = 3;
    private int cashBet_;
    /**
     * <code>int32 cashBet = 3;</code>
     */
    public int getCashBet() {
      return cashBet_;
    }

    public static final int MAXPLAYER_FIELD_NUMBER = 4;
    private int maxPlayer_;
    /**
     * <code>int32 maxPlayer = 4;</code>
     */
    public int getMaxPlayer() {
      return maxPlayer_;
    }

    public static final int ISPLAYING_FIELD_NUMBER = 5;
    private boolean isPlaying_;
    /**
     * <code>bool isPlaying = 5;</code>
     */
    public boolean getIsPlaying() {
      return isPlaying_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (index_ != 0) {
        output.writeInt32(1, index_);
      }
      if (size_ != 0) {
        output.writeInt32(2, size_);
      }
      if (cashBet_ != 0) {
        output.writeInt32(3, cashBet_);
      }
      if (maxPlayer_ != 0) {
        output.writeInt32(4, maxPlayer_);
      }
      if (isPlaying_ != false) {
        output.writeBool(5, isPlaying_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, index_);
      }
      if (size_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, size_);
      }
      if (cashBet_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, cashBet_);
      }
      if (maxPlayer_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, maxPlayer_);
      }
      if (isPlaying_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, isPlaying_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.fanxi.service.message.TableProto.Table)) {
        return super.equals(obj);
      }
      com.fanxi.service.message.TableProto.Table other = (com.fanxi.service.message.TableProto.Table) obj;

      boolean result = true;
      result = result && (getIndex()
          == other.getIndex());
      result = result && (getSize()
          == other.getSize());
      result = result && (getCashBet()
          == other.getCashBet());
      result = result && (getMaxPlayer()
          == other.getMaxPlayer());
      result = result && (getIsPlaying()
          == other.getIsPlaying());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      hash = (37 * hash) + SIZE_FIELD_NUMBER;
      hash = (53 * hash) + getSize();
      hash = (37 * hash) + CASHBET_FIELD_NUMBER;
      hash = (53 * hash) + getCashBet();
      hash = (37 * hash) + MAXPLAYER_FIELD_NUMBER;
      hash = (53 * hash) + getMaxPlayer();
      hash = (37 * hash) + ISPLAYING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsPlaying());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.fanxi.service.message.TableProto.Table parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fanxi.service.message.TableProto.Table parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fanxi.service.message.TableProto.Table parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.fanxi.service.message.TableProto.Table parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.fanxi.service.message.TableProto.Table parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fanxi.service.message.TableProto.Table parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fanxi.service.message.TableProto.Table parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.fanxi.service.message.TableProto.Table parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.fanxi.service.message.TableProto.Table parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.fanxi.service.message.TableProto.Table parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.fanxi.service.message.TableProto.Table prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fanxi.Table}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fanxi.Table)
        com.fanxi.service.message.TableProto.TableOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.fanxi.service.message.TableProto.internal_static_fanxi_Table_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.fanxi.service.message.TableProto.internal_static_fanxi_Table_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.fanxi.service.message.TableProto.Table.class, com.fanxi.service.message.TableProto.Table.Builder.class);
      }

      // Construct using com.fanxi.service.message.TableProto.Table.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        index_ = 0;

        size_ = 0;

        cashBet_ = 0;

        maxPlayer_ = 0;

        isPlaying_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.fanxi.service.message.TableProto.internal_static_fanxi_Table_descriptor;
      }

      public com.fanxi.service.message.TableProto.Table getDefaultInstanceForType() {
        return com.fanxi.service.message.TableProto.Table.getDefaultInstance();
      }

      public com.fanxi.service.message.TableProto.Table build() {
        com.fanxi.service.message.TableProto.Table result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.fanxi.service.message.TableProto.Table buildPartial() {
        com.fanxi.service.message.TableProto.Table result = new com.fanxi.service.message.TableProto.Table(this);
        result.index_ = index_;
        result.size_ = size_;
        result.cashBet_ = cashBet_;
        result.maxPlayer_ = maxPlayer_;
        result.isPlaying_ = isPlaying_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.fanxi.service.message.TableProto.Table) {
          return mergeFrom((com.fanxi.service.message.TableProto.Table)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.fanxi.service.message.TableProto.Table other) {
        if (other == com.fanxi.service.message.TableProto.Table.getDefaultInstance()) return this;
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        if (other.getSize() != 0) {
          setSize(other.getSize());
        }
        if (other.getCashBet() != 0) {
          setCashBet(other.getCashBet());
        }
        if (other.getMaxPlayer() != 0) {
          setMaxPlayer(other.getMaxPlayer());
        }
        if (other.getIsPlaying() != false) {
          setIsPlaying(other.getIsPlaying());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.fanxi.service.message.TableProto.Table parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.fanxi.service.message.TableProto.Table) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int index_ ;
      /**
       * <code>int32 index = 1;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <code>int32 index = 1;</code>
       */
      public Builder setIndex(int value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 index = 1;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0;
        onChanged();
        return this;
      }

      private int size_ ;
      /**
       * <code>int32 size = 2;</code>
       */
      public int getSize() {
        return size_;
      }
      /**
       * <code>int32 size = 2;</code>
       */
      public Builder setSize(int value) {
        
        size_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 size = 2;</code>
       */
      public Builder clearSize() {
        
        size_ = 0;
        onChanged();
        return this;
      }

      private int cashBet_ ;
      /**
       * <code>int32 cashBet = 3;</code>
       */
      public int getCashBet() {
        return cashBet_;
      }
      /**
       * <code>int32 cashBet = 3;</code>
       */
      public Builder setCashBet(int value) {
        
        cashBet_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 cashBet = 3;</code>
       */
      public Builder clearCashBet() {
        
        cashBet_ = 0;
        onChanged();
        return this;
      }

      private int maxPlayer_ ;
      /**
       * <code>int32 maxPlayer = 4;</code>
       */
      public int getMaxPlayer() {
        return maxPlayer_;
      }
      /**
       * <code>int32 maxPlayer = 4;</code>
       */
      public Builder setMaxPlayer(int value) {
        
        maxPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 maxPlayer = 4;</code>
       */
      public Builder clearMaxPlayer() {
        
        maxPlayer_ = 0;
        onChanged();
        return this;
      }

      private boolean isPlaying_ ;
      /**
       * <code>bool isPlaying = 5;</code>
       */
      public boolean getIsPlaying() {
        return isPlaying_;
      }
      /**
       * <code>bool isPlaying = 5;</code>
       */
      public Builder setIsPlaying(boolean value) {
        
        isPlaying_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool isPlaying = 5;</code>
       */
      public Builder clearIsPlaying() {
        
        isPlaying_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:fanxi.Table)
    }

    // @@protoc_insertion_point(class_scope:fanxi.Table)
    private static final com.fanxi.service.message.TableProto.Table DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.fanxi.service.message.TableProto.Table();
    }

    public static com.fanxi.service.message.TableProto.Table getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Table>
        PARSER = new com.google.protobuf.AbstractParser<Table>() {
      public Table parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Table(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Table> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Table> getParserForType() {
      return PARSER;
    }

    public com.fanxi.service.message.TableProto.Table getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fanxi_Table_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_fanxi_Table_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013Table.proto\022\005fanxi\"[\n\005Table\022\r\n\005index\030\001" +
      " \001(\005\022\014\n\004size\030\002 \001(\005\022\017\n\007cashBet\030\003 \001(\005\022\021\n\tm" +
      "axPlayer\030\004 \001(\005\022\021\n\tisPlaying\030\005 \001(\010B\'\n\031com" +
      ".fanxi.service.messageB\nTableProtob\006prot" +
      "o3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_fanxi_Table_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_fanxi_Table_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_fanxi_Table_descriptor,
        new java.lang.String[] { "Index", "Size", "CashBet", "MaxPlayer", "IsPlaying", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
